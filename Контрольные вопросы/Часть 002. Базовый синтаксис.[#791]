1. Что такое ООП?

Парадигма программирования, в которой основными концепциями являются понятия объектов и классов.

2. Базовые концепции ООП?

класс, объект, интерфейс, абстракция, инкапсуляция, наследование и полиморфизм

3. Укажите из каких элементов состоит класс.

Класс состоит из набора данных (полей, атрибутов, членов класса) и функций для работы с ними (методов).

4. Что такое конструктор? Типы конструкторов?

Конструктор инициализирует объект непосредственно во время его создания.

Конструктор определенный явно (параметризированный)
Конструктор по умолчанию

5. Можно ли наследовать конструктор?

в Java конструкторы не являются полями или методами, поэтому они не наследуются подклассом, но конструктор суперкласса может быть вызван из подкласса.

6. Что такое перегрузка конструктора?

7. Что такое статический метод?

8. Что такое не статический метод?

9. Для чего используется ключевое слово this?

для ссылки на обхект, для которого вызван метод

10. Какой класс является базовый родительным классов для всех классов?

super class

11. Что такое наследование? Приведите примеры из реальной жизни.

Наследование — это свойство системы, позволяющее описать новый класс на основе уже существующего с частично или полностью заимствующейся функциональностью.
Класс, от которого производится наследование, называется базовым, родительским или суперклассом. Новый класс — потомком, наследником или производным классом.
Породы животных, модели техники (телефоны, кофеварки)

12. Опишите процесс создания нового объекта.

13. Как вызвать метод из родительского класса?

class Calc {
    int a;
    public int add(int b, int c) {
        return b + c;
    }
}
public class subCalc extends Calc {
    subCalc testCalc = new subCalc;
    testCalc.add(3, 2);
}

14. Что такое переопределение метода?

15. Можно ли переопределить статический метод?

16. Что такое виртуальная функция и используются ли они в Java?

17. Что такое перегрузка метода?

18. Можно ли изменить тип возвращаемых тип данных при перегрузке метода?

19. Что такое множественное наследование? Как его можно реализовать в Java.

Java не поддерживает множественное наследование.
НО! класс может реализовать больше одного интерфейса.

20. Что такое полиморфизм? Приведите примеры из реальной жизни.

21. Что такое инкапсуляция?

Инкапсуляция — это свойство системы, позволяющее объединить данные и методы, работающие с ними в классе, и скрыть детали реализации от пользователя.

22. Как реализована инкапсуляция в Java?

23. Что такое абстракция?

24. Как реализована абстракция в Java?

25. Что такое интерфейс?

Интерфейс – это набор методов класса, доступных для использования другими классами.
Интерфейсы в Java компенсируют отсутствие множественного наследования классов.
В имплементирующем интерфейс классе должны быть реализованы все предусмотренные интерфейсом методы

26. Что такое внутренний класс? Типы внутренних классов.

27. Что такое анонимный класс.

28. Для чего используется конструктор в абстрактном классе?

29.Можно ли создать анонимный класс. если в классе нет конструктора по умолчанию?

30.Что такое композиция?

31.Что такое агрегация?

32.Какие типы исключительных ситуаций бывают?

33. Как обрабатываются исключительные ситуации?

34. Назовите основные методы класса Object?