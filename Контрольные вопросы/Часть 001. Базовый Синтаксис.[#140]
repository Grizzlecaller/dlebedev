1) Что такое виртуальная машина?

Виртуальная машина Java выполняет байт-код,
предварительно созданный из исходного кода с помощью компилятора javac.

2) К какому типа языка программирование относиться Java?

Объектно-ориентированный.
Интерпритируемый, исходники компилируются в байт-код, исполняемый виртуальной машиной.

3) Из каких компонентов состоит Java?

Виртуальная машина Java, компилятор javac, набор библиотек

4) Для чего используется JDK?

JDK - это Java Development Kit, т.е. набор для разработки ПО. Он включает в себя
компилятор(javac), JRE (Java runtime environment) - виртуальная машина и набор библиотек.

Используется для разработки на языке Java.

5) Для чего используется JRE?

минимальная реализация виртуальной машины, необходимая для исполнения Java-приложений,
без компилятора и других средств разработки.
Состоит из виртуальной машины — Java Virtual Machine — и библиотеки Java-классов.

Используется для исполнения Java-приложений.

6) Для чего используется VM?

Используется для запуска приложений на утсройстве пользователя.

7) Расскажите про базовые типы.

Есть 2 типа: примитивные и ссылочные.

Целые числа: int long bite short
Символьный: char
плавающая точка: float double
Логические: boolean

Эти типы просто содержат заданные значения.

Ссылочные типы - это типы которые указывают на что-либо(на объект).
Т.е. они содержат адрес в памяти где лежит объект на который ссылаемся

8) Что такое примитивные типы?

Целые числа: int long bite short
Символьный: char
плавающая точка: float double
Логические: boolean

Эти типы просто содержат данные.

9) Что такое классы обертки?

Нужны для того, что бы оперировать примитивными типами как объектами.

10) Что такое автобоксинг и анбоксинг?

автобоксинг -  присвоение примитивного типа данных объекту соответствующего класса-обертки
анбоксинг - присвоение объекта класса-обертки примитивному типу


Integer q = new Integer(5); boxing
Integer q = 5; boxing

int w = q.IntValue(); unboxing
int w = q; unboxing

11) Как в Java передаются параметры в методы?

Параметры передаются по значению (скопировать значение и передать копию).

12) Почему нельзя изменить ссылку на объект в методе?

Потому, что параметры передаются по значению, в нутри метода мы изменим локальную ссылку на объект,
но это не как не повлияет на ссылку которую мы передавали в метод.

13) Описать механизм создания байт кода.

файл *.java скармливаем javac с указанием куда положить результат в виде файла *.class,
в котором содержится байт-код

14) Что такое оператор условия?

Это операторы(ключевые слова языка) создающие ветвление алгоритма программ.

15) Какие типы оператор условия существуют?

Существует конструкция if-else

if (Условие){
}else{
}

Существует конструкция множественного условия switch case
switch(Переменная):
{
	case Значение 1:
		break;
	case Значение 2:
		break;
	default:
		break;
}

Существут тернарный оператор условия

(Условие) ? Истино : Ложно;

16) Почему нельзя сравнивать ссылочные типы по оператору ==?

Потому что они сслылаются на разные адреса в памяти.
надо сравничать через equals
a.equals(b)

17) Почему примитивные типы можно сравнивать через оператор ==?

примитивные типы содержат значения, в отличии от ссылочных типов.
значения можно сравнивать через ==

18) Какие объекты могут быть использованы в операторе switch?

Можно использовать простые типы byte, short, char, int.
Можно использовать строки(String),
Можно использовать классы-обёртки  Byte, Short, Character, Integer.

19) Расскажите про булевы операции || && ? Что такое short-circuit?

|| - логическое ИЛИ, результат будет True хотя бы один операнд True.
&& - логическое И, результат будет False хотя бы один операнд False.

Они вычисляют значение правого операнда тололько если результат
не может быть вычислен на основании значения левого операнда

short-circuit - применяется только к выражениям типа boolean

20) Что такое тернарное условие?

(Условие) ? Истино : Ложно;

exp1 = i > 0 ? exp2 : exp3;

(Условие) ? Выражение, если условие Истино : Выражение, если условие Ложно;

21) Что такое циклы и для чего они используются?

Циклы многократно выполняют один и тот же набор инструкций до тех пор,
пока не будет удовлетворено условие завершения цикла.

22) Для чего используется цикл for?

Цикл for используется для многократного повторения содержимого тела цикла.

for (инициализация; условие; итерация) {
    //тело цикла
}

23) Для чего используется цикл for each?

Предназначен для строго последовательного выполнения повторяющихся действий над коллекцией объектов вроде массива.

for(тип итерационнаяПеременная : коллекция) {
    //Тело цикла
}

24) Для чего используется цикл while?

Цикл While

while(условие) {  //условие - любое логическое выражение
    // тело цикла будет выподняться до тех пор, пока условное выражение истинно
}

25) Для чего используется цикл do while?

Цикл do-while

do {
    // тело цикла
} while(условие)

Сначала выполняется тело цикла, после чего проверяется условие.
Если условие истинно, цикл повторяется.

26) Что такое массив?

Массив - это именнованное множество переменных, объектов одного типа.
Массив в Java это объект и доступ к нему осуществляется через ссылочный тип.

27) Как создать массив?

int[] array = new int[10]
так же можно при инициализации заполнить массив
int[] array = new int[]{1, 2, 3, 4, 5}
в данном случае длинна массива будет равно 4 (0-4)

28) Как присвоить значение ячейке массива?

Обратиться к массиву по индексу и присвоить значение.
Индекс массива начинается с 0.

array[0] = 1;
array[1] = 2;
array[2] = 3;

int[] array = new int[10];
        for (int a = 0; a < array.length; a++) {
            array[a] = a + 1;
        }

29) Как можно пройти по всем элементам массива?

Цикл for

for(int i = ; i < array.length; i++) {
            System.out.println(array[i]);
}

Цикл for each

for(int i : array) {
    System.out.println(i);
}

30) Как можно найти элемент в массиве?

for(int item : array) {
            if(item == 0) {
                System.out.println("Элемент найден");
                break;
            }
        }

31) Что будет если обратить к несуществующей ячейки массива?

На этапе выполнения программы появится исключение и программа аварийно завершится.

32) Как удалить ячейку в массие?

Ячейку удалить нельзя.

int[] array = new int[10];
Массив с меньшим количеством элементов можно только пересоздать.
или обрезать.

33) Как отредактировать ячейку в массиве?

обратиться к элементу массива и задать новое значение
int[] array = new int[]{1, 2, 3, 4, 5}
array[3] = 10;