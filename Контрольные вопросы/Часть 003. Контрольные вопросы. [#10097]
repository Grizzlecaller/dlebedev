Контрольные вопросы:

1. Что такое “коллекция”.

из https://pro-java.ru/java-dlya-nachinayushhix/kollekcii-v-java-chto-eto-takoe-i-zachem-oni-nuzhny/
Коллекция - это объект, способный хранить группу одинаковых элементов.
Она содержит методы для операций с однородными данными.

2. Назовите преимущества использования коллекций.

из http://javastudy.ru/interview/collections/

Надо перефразировать этот текст

Массивы обладают значительными недостатками.
Одним из них является конечный размер массива, как следствие, необходимость следить за размером массива.
Другим — индексная адресация, что не всегда удобно, т.к. ограничивает возможности добавления и удаления объектов.
Чтобы избавиться от этих недостатков уже несколько десятилетий программисты используют рекурсивные типы данных, такие как списки и деревья.
Стандартный набор коллекций Java служит для избавления программиста от необходимости самостоятельно реализовывать эти типы данных
 и снабжает его дополнительными возможностями.


3. Какие данные могут хранить коллекции?

Любые ссылочные типы данных.
(классы, перечисления и интерфейсы, например, объявленные в стандартной библиотеке Java, а также массивы.)

4. Какие есть типы коллекций? Как они характеризуются?
5. Назовите основные реализации List, Set, Map.
6. В чём отличие ArrayList от LinkedList?

из https://habr.com/ru/post/162017/

ArrayList - список, реализованный на основе массива.
Имеет размер n=10, по умолчанию. при добавлении n+1 элемента будет создан новый список размером (n * 3)\2 + 1,
в него будут помещены элементы старого списка + новый элемент.
Получается, что при добавлении элемента с необходимостью расширения массива больше чем при записи элемента в пустую ячейку.

Преимущества:
- имеет доступ к любому элементу по индексу;
- Элементы хранятся массивом

Недостатки:
- при удалении элемента  из середины списка происходит перезапись всех элементов правее удаляемого элемента на одну позицию влево;
- при удалении элементов размер списка не уменьшается, без явного вызова метода trimToSize().

LinkedList - является двунаправленным списком, где каждый элемент имеет указатели на предыдущий и следующий элемент списка.

"из https://habr.com/ru/post/337558/
LinkedList — класс, реализующий два интерфейса — List и Deque.
Это обеспечивает возможность создания двунаправленной очереди из любых (в том числе и null) элементов.
Каждый объект, помещенный в связанный список, является узлом (нодом).
Каждый узел содержит элемент, ссылку на предыдущий и следующий узел.
Фактически связанный список состоит из последовательности узлов, каждый из которых предназначен для хранения объекта определенного
при создании типа."

Преимущества:
- запись элемента в конец списка происходит за постоянное время, т.к. ссылки на первый и последний элемент хранятся. Не нужно перебирать список в поисках последнего элемента.
- Предпочтительное применение с случаях постоянного добавления/удаления элементов в середине списка.


7. В чём отличие HashSet от TreeSet?
8. В чём отличие Set от Map?
9. Как задается порядок следования объектов в коллекции, как отсортировать коллекцию?
10. Чем отличается Comparable от Comparator?
11. Что такое сортировка по принципу Natural Order?
12. Что такое equals и hashcode?
13. Какие есть способы перебора всех элементов List?
14. Как реализован цикл foreach?
15. В чем разница между Iterator и ListIterator?
16. Как происходит удаление элементов из ArrayList?

из https://habr.com/ru/post/162017/

При удалении элемента из списка происходит перезапись всех элементов справа от удаляемого элемента на одну ячейку влево,
при этом размер списка не уменьшается, пока явно не использовать метод trimToSize().


17. Как происходит удаление элементов из LinkedList?

из https://habr.com/ru/post/337558/


